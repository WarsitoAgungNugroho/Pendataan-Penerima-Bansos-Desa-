<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Foto.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>